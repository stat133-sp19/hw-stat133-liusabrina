dat = read.csv('ssc.csv')
xi = as.numeric(dat$sex=="f")
yi = as.numeric(dat$sex=="f" & dat$occupation=='a')
q7est = sum(yi)/sum(xi)
q7est
# delete this later
se2 = sum(res^2) / (n-1) # needs to be .2544
se2 = .2544
N*sqrt((1-(n/N))*se2/n) #makes this 32.34
#sqrt(se2)
N = 864
n = 150
res = yi - q7est * xi
seres = sqrt((N-n)/(n*N))*sd(res)/mean(xi)
q7est + qnorm(0.975) * c(Lower=-1, Estimate=0, Upper=1) * seres
srs_design = update(srs_design, femInd=xi, academ=yi)
dat = read.csv('ssc.csv')
dat
xi = as.numeric(dat$sex=="f")
yi = as.numeric(dat$sex=="f" & dat$occupation=='a')
q7est = sum(yi)/sum(xi)
q7est
length(xi)
#srs_design = update(srs_design, femInd=xi, academ=yi)
bhat = svyratio(~yi, ~xi, srs_design)
#srs_design = update(srs_design, femInd=xi, academ=yi)
bhat = svyratio(~yi, ~xi, srs_design)
N = 864
n = 150
res = yi - q7est * xi
seres = sqrt((N-n)/(n*N))*sd(res)/mean(xi)
q7est + qnorm(0.975) * c(Lower=-1, Estimate=0, Upper=1) * seres
svydesign(ids=~1, fpc=rep(N,n), data=dat)
#srs_design = update(srs_design, femInd=xi, academ=yi)
#bhat = svyratio(~yi, ~xi, srs_design)
#confint(bhat)
#bhat = svymean(~yi, subset(srs_design, sex=="f"))
#confint(bhat)
#srs_design
srs_design = svydesign(ids=~1, fpc=rep(N,n), data=dat)
#srs_design = update(srs_design, femInd=xi, academ=yi)
#bhat = svyratio(~yi, ~xi, srs_design)
#confint(bhat)
#bhat = svymean(~yi, subset(srs_design, sex=="f"))
#confint(bhat)
srs_design
srs_design = svydesign(ids=~1, fpc=rep(N,n), data=dat)
srs_design = update(srs_design, femInd=xi, academ=yi)
#bhat = svyratio(~yi, ~xi, srs_design)
#confint(bhat)
#bhat = svymean(~yi, subset(srs_design, sex=="f"))
#confint(bhat)
#srs_design
srs_design = svydesign(ids=~1, fpc=rep(N,n), data=dat)
srs_design = update(srs_design, femInd=xi, academ=yi)
#bhat = svyratio(~yi, ~xi, srs_design)
#confint(bhat)
#bhat = svymean(~yi, subset(srs_design, sex=="f"))
#confint(bhat)
srs_design
srs_design = svydesign(ids=~1, fpc=rep(N,n), data=dat)
srs_design = update(srs_design, femInd=xi, academ=yi)
bhat = svyratio(~yi, ~xi, srs_design)
confint(bhat)
#bhat = svymean(~yi, subset(srs_design, sex=="f"))
#confint(bhat)
#srs_design
srs_design = svydesign(ids=~1, fpc=rep(N,n), data=dat)
srs_design = update(srs_design, femInd=xi, academ=yi)
bhat = svyratio(~yi, ~xi, srs_design)
#confint(bhat)
bhat = svymean(~yi, subset(srs_design, sex=="f"))
confint(bhat)
xi = as.numeric(dat$sex=="f")
yi = as.numeric(dat$sex=="f" & dat$occupation=='a')
q7est = sum(yi)/sum(xi)
q7est
864* confint(bhat)
xi = as.numeric(dat$sex=="f")
yi = as.numeric(dat$sex=="f" & dat$occupation=='a')
q7est = sum(yi)/sum(xi)
cat('Estimate of the proportion of female members who are in academia:',q7est)
N = 1132
n = 20
age_est = mean(q6$age) / mean(q6$diameter) * 10.3 #est
cat('Estimate of population mean age:', age_est)
N = 1132
n = 20
age_est = mean(q6$age) / mean(q6$diameter) * 10.3 #est
cat('Estimate of population mean age:', age_est, 'years.')
N = 1132
n = 20
age_est = mean(q6$age) / mean(q6$diameter) * 10.3 #est
cat('Estimate of population mean age:', age_est, 'years')
se2 = sum((q6$age-(age_est/10.3)*q6$diameter)^2) / (n-1)
sqrt((10.3/mean(q6$diameter))^2*(N-n)/(n*N)*se2)
se2 = sum((q6$age-(age_est/10.3)*q6$diameter)^2) / (n-1)
q6SE = sqrt((10.3/mean(q6$diameter))^2*(N-n)/(n*N)*se2)
cat('Estimate of standarad error:', q6SE)
srs_design<-svydesign(id=~1, fpc=rep(N,n),data=q6)
ratio = svyratio(~age, ~diameter, design=srs_design)
predict(ratio, total=10.3)
design = svydesign(ids=~1, fpc=rep(N,n), data=q6)
model = svyglm(age~diameter, design=design)
predict(model, newdata=data.frame("diameter"=10.3))
x1 = data.frame(10.3,117.6204)
x2 = data.frame(10.3, 118.36)
x1 = data.frame(10.3,117.6204)
x2 = data.frame(10.3, 118.36)
plot(q6$diameter, q6$age, xlab="tree diameter", ylab='tree age')
points(10.3,117.6204,pch=0,cex=.75)
text(x1,labels="ratio", cex=.8, pos=3)
points(10.3, 118.36, pch=0,cex=.75)
text(x2, labels="regression", cex=.8, pos=2)
x1 = data.frame(10.3,117.6204)
x2 = data.frame(10.3, 118.36)
plot(q6$diameter, q6$age, xlab="tree diameter", ylab='tree age')
points(10.3,117.6204,pch=0,cex=.75)
abline(0,117.6204/10.3)
text(x1,labels="ratio", cex=.8, pos=3)
points(10.3, 118.36, pch=0,cex=.75)
text(x2, labels="regression", cex=.8, pos=2)
x1 = data.frame(10.3,117.6204)
x2 = data.frame(10.3, 118.36)
plot(q6$diameter, q6$age, xlab="tree diameter", ylab='tree age')
points(10.3,117.6204,pch=0,cex=.75)
abline(0,117.6204/10.3, \dots) #ratio has
x1 = data.frame(10.3,117.6204)
x2 = data.frame(10.3, 118.36)
plot(q6$diameter, q6$age, xlab="tree diameter", ylab='tree age')
points(10.3,117.6204,pch=0,cex=.75)
abline(0,117.6204/10.3) #ratio has
text(x1,labels="ratio", cex=.8, pos=3)
points(10.3, 118.36, pch=0,cex=.75)
text(x2, labels="regression", cex=.8, pos=2)
x1 = data.frame(10.3,117.6204)
x2 = data.frame(10.3, 118.36)
plot(q6$diameter, q6$age, xlab="tree diameter", ylab='tree age')
points(10.3,117.6204,pch=0,cex=.75)
abline(0,117.6204/10.3, lty=3) #ratio has
text(x1,labels="ratio", cex=.8, pos=3)
points(10.3, 118.36, pch=0,cex=.75)
text(x2, labels="regression", cex=.8, pos=2)
design = svydesign(ids=~1, fpc=rep(N,n), data=q6)
model = svyglm(age~diameter, design=design)
predict(model, newdata=data.frame("diameter"=0)) #regression estimator
design = svydesign(ids=~1, fpc=rep(N,n), data=q6)
model = svyglm(age~diameter, design=design)
predict(model, newdata=data.frame("diameter"=10.3)) #regression estimator
predict(model, newdata=data.frame("diameter"=0)) #find intercept
predict(model, newdata=data.frame("diameter"=0))[1] #find intercept
int = predict(model, newdata=data.frame("diameter"=0))[1] #find intercept
int
predict(model, newdata=data.frame("diameter"=0))[1] #find intercept
predict(model, newdata=data.frame("diameter"=0))[1] #find intercept
(118.36--7.808087)/(10.3-0)
x1 = data.frame(10.3,117.6204)
x2 = data.frame(10.3, 118.36)
plot(q6$diameter, q6$age, xlab="tree diameter", ylab='tree age')
points(10.3,117.6204,pch=0,cex=.75)
abline(0,117.6204/10.3, lty=3) #ratio estimator line has dotted line
text(x1,labels="ratio", cex=.8, pos=3)
points(10.3, 118.36, pch=0,cex=.75)
abline(-7.808087, 12.24933) #regression estimator line has solid line
text(x2, labels="regression", cex=.8, pos=2)
getwd()
knitr::opts_chunk$set(echo = TRUE)
typeof(1L)
typeof(1)
typeof(1:9)
0:3
as.numeric(0:3)
as.logical(0:3)
as.character(0:3)
iguodala
iguodala = read.csv("../data/andre-iguodala")
iguodala = read.csv("../data/andre-iguodala.csv")
getwd()
setwd("C:/Users/lius1644/Desktop/Stat 133/Workouts/workout01")
iguodala = read.csv("data/andre-iguodala.csv")
iguodala
iguodala$name = "Andre Iguodala"
head(iguodala)
iguodala$shot_made_flag = c('shot_no', 'shot_yes')[iguodala$shot_made_flag]
head(iguodala)
green$shot_made_flag = c('shot_yes', 'shot_no')[green$shot_made_flag]
green = read.csv("data/draymond-green.csv")
green$name = "Draymond Green"
green$shot_made_flag = c('shot_yes', 'shot_no')[green$shot_made_flag]
head(green)
green$shot_made_flag = c('shot_no', 'shot_yes')[green$shot_made_flag]
head(green)
green = read.csv("data/draymond-green.csv")
green$name = "Draymond Green"
green$shot_made_flag = c('shot_no', 'shot_yes')[green$shot_made_flag]
head(green)
durant = read.csv("data/kevin-durant.csv")
klay = read.csv("data/klay-thompson.csv")
curry = read.csv("data/stephen-curry.csv")
durant$shot_made_flag = c('shot_no', 'shot_yes')[durant$shot_made_flag]
head(durant)
klay$shot_made_flag = c('shot_no', 'shot_yes')[klay$shot_made_flag]
head(klay)
curry$shot_made_flag = c('shot_no', 'shot_yes')[curryn$shot_made_flag]
curry$shot_made_flag = c('shot_no', 'shot_yes')[curry$shot_made_flag]
head(curry)
iguodala$minute = iguodala$period * 12 - iguodala$minutes_remaining
head(iguodala)
getwd()
# title:
# description:
# input(s):
# output(s):
iguodala = read.csv("data/andre-iguodala.csv")
green = read.csv("data/draymond-green.csv")
durant = read.csv("data/kevin-durant.csv")
klay = read.csv("data/klay-thompson.csv")
curry = read.csv("data/stephen-curry.csv")
iguodala$name = "Andre Iguodala"
green$name = "Draymond Green"
durant$name = "Kevin Durant"
klay$name = "Klay Thompson"
curry$name = "Stephen Curry"
iguodala$shot_made_flag = c('shot_no', 'shot_yes')[iguodala$shot_made_flag]
green$shot_made_flag = c('shot_no', 'shot_yes')[green$shot_made_flag]
durant$shot_made_flag = c('shot_no', 'shot_yes')[durant$shot_made_flag]
klay$shot_made_flag = c('shot_no', 'shot_yes')[klay$shot_made_flag]
curry$shot_made_flag = c('shot_no', 'shot_yes')[curry$shot_made_flag]
iguodala$minute = iguodala$period * 12 - iguodala$minutes_remaining
green$minute = green$period * 12 - green$minutes_remaining
durant$minute = green$period * 12 - durant$minutes_remaining
klay$minute = green$period * 12 - klay$minutes_remaining
curry$minute = green$period * 12 - curry$minutes_remaining
sink(file='output/andre-iguodala-summary.txt')
summary(iguodala)
sink()
sink(file='output/draymond-green-summary.txt')
summary(green)
sink()
sink(file='output/kevin-durant-summary.txt')
summary(durant)
sink()
sink(file='output/klay-thompson-summary.txt')
summary(klay)
sink()
sink(file='output/stephen-curry-summary.txt')
summary(curry)
sink()
# title:
# description:
# input(s):
# output(s):
iguodala = read.csv("data/andre-iguodala.csv")
green = read.csv("data/draymond-green.csv")
durant = read.csv("data/kevin-durant.csv")
klay = read.csv("data/klay-thompson.csv")
curry = read.csv("data/stephen-curry.csv")
iguodala$name = "Andre Iguodala"
green$name = "Draymond Green"
durant$name = "Kevin Durant"
klay$name = "Klay Thompson"
curry$name = "Stephen Curry"
iguodala$shot_made_flag = c('shot_no', 'shot_yes')[iguodala$shot_made_flag]
green$shot_made_flag = c('shot_no', 'shot_yes')[green$shot_made_flag]
durant$shot_made_flag = c('shot_no', 'shot_yes')[durant$shot_made_flag]
klay$shot_made_flag = c('shot_no', 'shot_yes')[klay$shot_made_flag]
curry$shot_made_flag = c('shot_no', 'shot_yes')[curry$shot_made_flag]
iguodala$minute = iguodala$period * 12 - iguodala$minutes_remaining
green$minute = green$period * 12 - green$minutes_remaining
durant$minute = durant$period * 12 - durant$minutes_remaining
klay$minute = klay$period * 12 - klay$minutes_remaining
curry$minute = curry$period * 12 - curry$minutes_remaining
sink(file='output/andre-iguodala-summary.txt')
summary(iguodala)
sink()
sink(file='output/draymond-green-summary.txt')
summary(green)
sink()
sink(file='output/kevin-durant-summary.txt')
summary(durant)
sink()
sink(file='output/klay-thompson-summary.txt')
summary(klay)
sink()
sink(file='output/stephen-curry-summary.txt')
summary(curry)
sink()
shots_data = rbind(iguodala,green,durant,klay,curry)
shots_data
write.csv(x=shots_data, file='data/shots-data.csv')
sink(file='output/shots-data-summary.txt')
summary(shots_data)
sink()
install.packages("jpeg")
install.packages("grid")
getwd(0)
getwd()
# title:
# description:
# input(s):
# output(s):
library(ggplot2)
court_file = "images/nba-court.jpg"
klay_scatterplot <- ggplot(data = klay) +
geom_point(aes(x = x, y = y, color = shot_made_flag))
#klay_shot_chart <- ggplot(data = klay) +
#  annotation_custom(court_image, -250, 250, -50, 420) +
#  geom_point(aes(x = x, y = y, color = shot_made_flag)) +
#  ylim(-50, 420) +
#  ggtitle('Shot Chart: Klay Thompson (2016 season)') +
#  theme_minimal()
klay_scatterplot
# title:
# description:
# input(s):
# output(s):
library(ggplot2)
court_file = "images/nba-court.jpg"
klay_shot_chart <- ggplot(data = klay) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
# title:
# description:
# input(s):
# output(s):
library(ggplot2)
court_file = "images/nba-court.jpg"
klay_shot_chart <- ggplot(data = klay) +
annotation_custom(court_file, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
klay_shot_chart
install.packages("installr")
library(installr)
updateR()
library(ggplot2)
library(jpeg)
library(grid)
court_file = "images/nba-court.jpg"
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
iguodala_shot_chart <- ggplot(data = iguodala) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Andre Iguodala (2016 season)') +
theme_minimal()
install.packages(c('jpeg', 'grid'))
install.packages(c("jpeg", "grid"))
library(ggplot2)
library(jpeg)
library(grid)
court_file = "images/nba-court.jpg"
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
iguodala_shot_chart <- ggplot(data = iguodala) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Andre Iguodala (2016 season)') +
theme_minimal()
iguodala_shot_chart
# title:
# description:
# input(s):
# output(s):
library(ggplot2)
library(jpeg)
library(grid)
court_file = "images/nba-court.jpg"
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
iguodala_shot_chart <- ggplot(data = iguodala) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Andre Iguodala (2016 season)') +
theme_minimal()
green_shot_chart <- ggplot(data = green) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Draymond Green (2016 season)') +
theme_minimal()
durant_shot_chart <- ggplot(data = durant) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Kevin Durant (2016 season)') +
theme_minimal()
klay_shot_chart <- ggplot(data = klay) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
curry_shot_chart <- ggplot(data = curry) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Stephen Curry (2016 season)') +
theme_minimal()
pdf(file='images/andre-iguodala.pdf', width=6.5, height=5)
iguodala_shot_chart
dev.off()
pdf(file='images/draymond-green.pdf', width=6.5, height=5)
green_shot_chart
dev.off()
pdf(file='images/kevin-durant.pdf', width=6.5, height=5)
durant_shot_chart
dev.off()
pdf(file='images/klay-thompson.pdf', width=6.5, height=5)
klay_shot_chart
dev.off()
pdf(file='images/stephen-curry.pdf', width=6.5, height=5)
curry_shot_chart
dev.off()
# title:
# description:
# input(s):
# output(s):
library(ggplot2)
library(jpeg)
library(grid)
court_file = "images/nba-court.jpg"
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
iguodala_shot_chart <- ggplot(data = iguodala) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Andre Iguodala (2016 season)') +
theme_minimal()
green_shot_chart <- ggplot(data = green) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Draymond Green (2016 season)') +
theme_minimal()
durant_shot_chart <- ggplot(data = durant) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Kevin Durant (2016 season)') +
theme_minimal()
klay_shot_chart <- ggplot(data = klay) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
curry_shot_chart <- ggplot(data = curry) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Stephen Curry (2016 season)') +
theme_minimal()
pdf(file='images/andre-iguodala-shot-chart.pdf', width=6.5, height=5)
iguodala_shot_chart
dev.off()
pdf(file='images/draymond-green-shot-chart.pdf', width=6.5, height=5)
green_shot_chart
dev.off()
pdf(file='images/kevin-durant-shot-chart.pdf', width=6.5, height=5)
durant_shot_chart
dev.off()
pdf(file='images/klay-thompson-shot-chart.pdf', width=6.5, height=5)
klay_shot_chart
dev.off()
pdf(file='images/stephen-curry-shot-chart.pdf', width=6.5, height=5)
curry_shot_chart
dev.off()
gsw-shot-charts = ggplot(shots_data, aes(x,y)) + geom_point() + facet_wrap(~name)
gsw_shot_charts = ggplot(shots_data, aes(x,y)) + geom_point() + facet_wrap(~name)
gsw_shot_charts
gsw_shot_charts = ggplot(shots_data, aes(x,y)) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Charts: GSW (2016 season)') +
theme_minimal() + facet_wrap(~name)
gsw_sho
gsw_shot_charts
pdf(file='images/gsw-shot-charts.pdf', width=8, height=7)
gsw_shot_charts
dev.off()
png(filename='images/gsw-shot-charts.png', width=8, height=7)
gsw_shot_charts
dev.off()
getwd()
getwd()
knitr::opts_chunk$set(echo = TRUE)
data = read.csv('data/shots-data.csv')
getwd()
setwd("C:/Users/lius1644/Desktop/Stat 133/Workouts/workout01/data")
data = read.csv('shots-data.csv')
list.files()
read.csv('shots-data.csv')
read.csv('shots-data.csv')
